name: ${{values.app_name}}-ci/cd

on:
  push:
    paths:
      - 'src/**'
    branches:
      - main
  workflow_dispatch:

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ '${{ secrets.DOCKERHUB_USERNAME }}' }}
          password: ${{ '${{ secrets.DOCKERHUB_TOKEN }}' }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: eggystrone/${{values.app_name}}:${{ '${{ github.sha }}' }}
    outputs:
      commit_id: ${{ '${{ github.sha }}' }}

  cd:
    needs: ci
    runs-on: self-hosted
    steps:


      - uses: actions/checkout@v3

      #modify values
      - name : Modify Values file
        shell: bash
        run: |
          echo ${{ '${{needs.ci.outputs.commit_id}}' }}
          pip install yq
          yq -Yi '.image.tag = "${{ '${{needs.ci.outputs.commit_id}}' }}"' charts/${{values.app_name}}/values-${{values.app_env}}.yaml

      - name: Commit changes
        uses: EndBug/add-and-commit@v9
        with:
          message: 'Updates values.yaml with commit ${{ '${{needs.ci.outputs.commit_id}}' }}'

      - name : Installing Argo
        shell: bash
        run: |
          curl -sSL -o argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
          chmod +x argocd
          sudo mv ./argocd /usr/local/bin/argocd

      - name : Ensure argocd and app
        shell: bash
        run: |

          #Connects the argocd repo
          repo="https://github.com/UncleBlazerr-org/${{values.app_name}}.git"
          argocd repo list | grep -q $repo || argocd repo add $repo

          #creates the argocd app
          argocd app get ${{values.app_name}} || argocd app create ${{values.app_name}} \
            --repo $repo \
            --path charts/${{values.app_name}} \
            --dest-namespace ${{values.app_env}} \
            --dest-server https://kubernetes.default.svc \
            --values values-${{values.app_env}}.yaml \
            --revision main \
            --sync-policy manual \
            --sync-option CreateNamespace=true
          

      - name : Argocd app sync
        shell: bash
        run: |
          #install argocd
          argocd login argo-cd-argocd-server.argocd  \
            --insecure \
            --grpc-web \
            --username admin \
            --password ${{ '${{ secrets.ARGOCD_PASSWORD }}' }}
          argocd app sync ${{values.app_name}}
          argocd app wait ${{values.app_name}} --timeout 180
          
  